---
title: "Simulation Challenge - Ryan Freer"
subtitle: "Generative Models and Monte Carlo Simulation"
format:
  html: 
    theme: cosmo
    toc: true
    toc-depth: 3
    code-fold: true
    code-tools: true
    embed-resources: true
execute:
  echo: false
  eval: true
  warning: false
  message: false
---

# Game Strategy Analysis

## Problem Statement

Imagine you are offered the following game and given a $1,000 budget in a special account to play the game: I will flip a coin, and if it comes up heads, we increase your account's balance by 50%; if it comes up tails, we reduce your account's balance by 40%. We are not only doing this once, but we will do it once per year until you turn 55. When you turn 55, you will receive the balance in your account.

## Generative Model

The game follows this DAG model:

- **t = 1, ..., N** (years until age 55)
- **Initial Wealth**: W₀ = 1000
- **Coin Flip t**: Cₜ ~ Bernoulli(0.5)
- **Wealth t**: 
  - Wₜ = 1.5 × Wₜ₋₁ if Cₜ = 1 (heads)
  - Wₜ = 0.6 × Wₜ₋₁ if Cₜ = 0 (tails)



```{r setup}
# Load required libraries (install if needed)
if (!require(ggplot2, quietly = TRUE)) {
  install.packages("ggplot2")
  library(ggplot2)
}

if (!require(dplyr, quietly = TRUE)) {
  install.packages("dplyr")
  library(dplyr)
}

if (!require(knitr, quietly = TRUE)) {
  install.packages("knitr")
  library(knitr)
}

if (!require(kableExtra, quietly = TRUE)) {
  install.packages("kableExtra")
  library(kableExtra)
}

if (!require(scales, quietly = TRUE)) {
  install.packages("scales")
  library(scales)
}

if (!require(gridExtra, quietly = TRUE)) {
  install.packages("gridExtra")
  library(gridExtra)
}

# Set seed for reproducibility
set.seed(123)

# Simulation parameters
initial_wealth <- 1000
num_simulations <- 100
max_years <- 30  # Assuming starting at age 25, playing until 55

# Function to simulate one game
simulate_game <- function(initial_wealth, years) {
  wealth <- numeric(years + 1)
  wealth[1] <- initial_wealth
  
  for (i in 1:years) {
    coin_flip <- rbinom(1, 1, 0.5)  # 1 for heads, 0 for tails
    if (coin_flip == 1) {
      wealth[i + 1] <- wealth[i] * 1.5  # 50% increase
    } else {
      wealth[i + 1] <- wealth[i] * 0.6  # 40% decrease
    }
  }
  
  return(wealth)
}
```



```{r simulation}
# Run 100 simulations
simulation_results <- list()
final_wealths <- numeric(num_simulations)

for (i in 1:num_simulations) {
  wealth_path <- simulate_game(initial_wealth, max_years)
  simulation_results[[i]] <- wealth_path
  final_wealths[i] <- wealth_path[length(wealth_path)]
}

# Create data frame for analysis
simulation_df <- data.frame(
  simulation = rep(1:num_simulations, each = max_years + 1),
  year = rep(0:max_years, num_simulations),
  wealth = unlist(simulation_results)
)
```



### Single Simulation

```{r single-simulation}
# Plot one simulation trajectory
single_sim <- simulate_game(initial_wealth, max_years)

ggplot(data.frame(year = 0:max_years, wealth = single_sim), aes(x = year, y = wealth)) +
  geom_line(color = "steelblue", size = 1) +
  geom_hline(yintercept = initial_wealth, color = "red", linetype = "dashed", size = 1) +
  scale_y_continuous(labels = dollar_format()) +
  labs(title = "Single Simulation Trajectory",
       subtitle = "Red line indicates initial investment of $1,000",
       x = "Year",
       y = "Wealth ($)") +
  theme_minimal() +
  theme(plot.title = element_text(size = 14, face = "bold"),
        plot.subtitle = element_text(size = 12))
```

### Multiple Simulations

```{r multiple-simulations}
# Plot sample of wealth trajectories
sample_sims <- sample(1:num_simulations, min(20, num_simulations))

trajectory_df <- simulation_df %>%
  filter(simulation %in% sample_sims)

ggplot(trajectory_df, aes(x = year, y = wealth, group = simulation)) +
  geom_line(alpha = 0.6, color = "steelblue") +
  geom_hline(yintercept = initial_wealth, color = "red", linetype = "dashed", size = 1) +
  scale_y_continuous(labels = dollar_format(), trans = "log10") +
  labs(title = "Sample Wealth Trajectories (Log Scale)",
       subtitle = "Red line indicates initial investment of $1,000",
       x = "Year",
       y = "Wealth ($)") +
  theme_minimal() +
  theme(plot.title = element_text(size = 14, face = "bold"),
        plot.subtitle = element_text(size = 12))
```

### Final Wealth Distribution

```{r wealth-distribution}
# Create histogram of final wealths
ggplot(data.frame(final_wealth = final_wealths), aes(x = final_wealth)) +
  geom_histogram(bins = 20, fill = "steelblue", alpha = 0.7, color = "white") +
  geom_vline(xintercept = initial_wealth, color = "red", linetype = "dashed", size = 1) +
  scale_x_continuous(labels = dollar_format()) +
  labs(title = "Distribution of Final Wealth",
       subtitle = "Red line indicates initial investment of $1,000",
       x = "Final Wealth ($)",
       y = "Frequency") +
  theme_minimal() +
  theme(plot.title = element_text(size = 14, face = "bold"),
        plot.subtitle = element_text(size = 12))
```

## Questions and Analysis

### Question 1: Expected Value Analysis

**What is the "expected value" of your account balance after 1 coin flip for the original game?**

```{r expected-value-one-flip}
# Calculate expected value after 1 coin flip
# E[W1] = 0.5 * (1.5 * W0) + 0.5 * (0.6 * W0)
# E[W1] = 0.5 * 1.5 * 1000 + 0.5 * 0.6 * 1000
# E[W1] = 0.75 * 1000 + 0.3 * 1000 = 750 + 300 = 1050

expected_value_one_flip <- 0.5 * 1.5 * initial_wealth + 0.5 * 0.6 * initial_wealth
expected_value_one_flip

# Also calculate the expected return rate
expected_return_rate <- (expected_value_one_flip - initial_wealth) / initial_wealth
expected_return_rate
```

**Answer:** The expected value after 1 coin flip is $`r format(round(expected_value_one_flip, 2), big.mark = ",")`, representing a `r round(expected_return_rate * 100, 1)`% expected return. This return is small compared to the initial investment of $1000. However it is just the simulation of one flip. It is not guaranteed to be positive. We would need to run more simulations to get a more accurate representation.

### Question 2: Expectation vs. Reality

**Is the expected value positive or negative? Do you expect your account to be worth more or less than $1,000 based on this result?**

```{r expectation-analysis}
# Calculate expected value after 30 years (age 25 to 55)
# Each year has expected return of 5%, so after 30 years:
# E[W30] = 1000 * (1.05)^30

expected_value_30_years <- initial_wealth * (1.05)^30
expected_value_30_years

# Calculate the expected annual return
annual_expected_return <- 0.5 * 1.5 + 0.5 * 0.6 - 1
annual_expected_return
```

**Answer:** The expected value is **positive**. Each year, the expected return is `r round(annual_expected_return * 100, 1)`%, so after 30 years, the expected account balance would be $`r format(round(expected_value_30_years, 2), big.mark = ",")`. This is significantly more than the initial invesment of $1000.

### Question 3: Single Simulation

**Run one simulation showing the dynamics of your account balance over time. Make an object-oriented ggplot2 plot showing your simulated account balance over time (i.e. as you age). Comment on the results, are you happy?**

```{r single-simulation-detailed}
# Run a single simulation
set.seed(42)  # For reproducible example
single_simulation <- simulate_game(initial_wealth, max_years)

# Create detailed plot
single_plot <- ggplot(data.frame(year = 0:max_years, wealth = single_simulation), 
                      aes(x = year, y = wealth)) +
  geom_line(color = "steelblue", size = 1.2) +
  geom_point(color = "darkblue", size = 1) +
  geom_hline(yintercept = initial_wealth, color = "red", linetype = "dashed", size = 1) +
  scale_y_continuous(labels = dollar_format(), trans = "log10") +
  scale_x_continuous(breaks = seq(0, max_years, 5)) +
  labs(title = "Single Simulation: Account Balance Over Time",
       subtitle = paste("Final balance: $", format(round(single_simulation[length(single_simulation)], 2), big.mark = ",")),
       x = "Years (Age 25 to 55)",
       y = "Account Balance ($)") +
  theme_minimal() +
  theme(plot.title = element_text(size = 16, face = "bold"),
        plot.subtitle = element_text(size = 14, color = "darkblue"),
        axis.title = element_text(size = 12),
        panel.grid.minor = element_blank())

# Print the plot
print(single_plot)

# Also save as PNG for easy viewing
ggsave("single_simulation_plot.png", single_plot, width = 10, height = 6, dpi = 300)

# Show final result
final_balance <- single_simulation[length(single_simulation)]
cat("Final account balance: $", format(round(final_balance, 2), big.mark = ","), "\n")
cat("Total return: ", round((final_balance - initial_wealth) / initial_wealth * 100, 1), "%\n")
```

**Analysis:** The single simulation shows an extremely positive return, but the return is not guaranteed. It is possible to lose money as seen in the next question with 100 simulations. The expected value is positive, but the return is not guaranteed wiht many outliers like this one that will prop up the mean balance. 

### Question 4: Multiple Simulations

**Run 100 simulations modelling the dynamics of your account balance over time. Make an object-oriented ggplot2 plot showing a probability distribution of the 100 simulated account balance at age 55. Comment on the results, are you happy? Why or why not?**

```{r multiple-simulations-detailed}
# Create detailed probability distribution plot
distribution_plot <- ggplot(data.frame(final_wealth = final_wealths), aes(x = final_wealth)) +
  geom_histogram(bins = 25, fill = "steelblue", alpha = 0.7, color = "white", size = 0.3) +
  geom_vline(xintercept = initial_wealth, color = "red", linetype = "dashed", size = 1.2) +
  geom_vline(xintercept = mean(final_wealths), color = "darkgreen", linetype = "solid", size = 1.2) +
  scale_x_continuous(labels = dollar_format(), trans = "log10") +
  labs(title = "Distribution of Final Account Balances (100 Simulations)",
       subtitle = paste("Mean: $", format(round(mean(final_wealths), 2), big.mark = ","), 
                        "| Median: $", format(round(median(final_wealths), 2), big.mark = ",")),
       x = "Final Account Balance at Age 55 ($)",
       y = "Frequency",
       caption = "Red dashed line: Initial investment ($1,000)\nGreen solid line: Mean final balance") +
  theme_minimal() +
  theme(plot.title = element_text(size = 16, face = "bold"),
        plot.subtitle = element_text(size = 14, color = "darkblue"),
        axis.title = element_text(size = 12),
        plot.caption = element_text(size = 10, hjust = 0),
        panel.grid.minor = element_blank())

# Print the plot
print(distribution_plot)

# Also save as PNG for easy viewing
ggsave("distribution_plot.png", distribution_plot, width = 10, height = 6, dpi = 300)

# Summary statistics
cat("Summary Statistics (100 Simulations):\n")
cat("Mean final balance: $", format(round(mean(final_wealths), 2), big.mark = ","), "\n")
cat("Median final balance: $", format(round(median(final_wealths), 2), big.mark = ","), "\n")
cat("Standard deviation: $", format(round(sd(final_wealths), 2), big.mark = ","), "\n")
cat("Minimum final balance: $", format(round(min(final_wealths), 2), big.mark = ","), "\n")
cat("Maximum final balance: $", format(round(max(final_wealths), 2), big.mark = ","), "\n")
```

**Analysis:** The mean balance is higher than the initial investment of $1000. However, there are many outliers that are much higher than the mean. This is evident by seing how low the median balance is compared to the mean. It is likely that one will end up with a balance much lower than the mean, and lower than the initial investment of $1000.

### Question 5: Probability Analysis

**Based on the 100 simulations above, what is the probability that your account balance will be greater than $1,000 at age 55?**

```{r probability-analysis}
# Calculate probability of ending with more than $1,000
prob_above_1000 <- mean(final_wealths > initial_wealth)
prob_below_1000 <- mean(final_wealths < initial_wealth)
prob_equal_1000 <- mean(final_wealths == initial_wealth)

# Calculate additional probability metrics
prob_above_5000 <- mean(final_wealths > 5000)
prob_above_10000 <- mean(final_wealths > 10000)
prob_below_100 <- mean(final_wealths < 100)

# Create probability summary
probability_summary <- data.frame(
  Condition = c("Greater than $1,000", "Less than $1,000", "Equal to $1,000", 
                "Greater than $5,000", "Greater than $10,000", "Less than $100"),
  Probability = c(prob_above_1000, prob_below_1000, prob_equal_1000,
                  prob_above_5000, prob_above_10000, prob_below_100),
  Percentage = c(prob_above_1000, prob_below_1000, prob_equal_1000,
                 prob_above_5000, prob_above_10000, prob_below_100) * 100
)

# Format the probabilities
probability_summary$Probability <- paste0(round(probability_summary$Probability, 3))
probability_summary$Percentage <- paste0(round(probability_summary$Percentage, 1), "%")

kable(probability_summary,
      caption = "Probability Analysis of Final Account Balances",
      col.names = c("Condition", "Probability", "Percentage")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                full_width = FALSE,
                position = "center")

cat("\nKey Result: The probability of ending with more than $1,000 is ", 
    round(prob_above_1000 * 100, 1), "%\n")
```

**Answer:** Based on the 100 simulations, the probability that your account balance will be greater than $1,000 at age 55 is **`r round(prob_above_1000 * 100, 1)`%**. This probability is not not high at all, barely better than a 1 in 4 chance. It way more likely to end up with a balance less than $1,000. This is a low probability, but it is not a guarantee. It is possible to end up with a balance greater than $1,000, with the probability of having a balnce over $10,000 being a mere 0.04%.